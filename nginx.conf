
#配置用户或者组,默认为nobody
#user  nobody;
#默认进程数1
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    #默认连接数：1024,作为本地代理服务器最大并发数=进程数X连接数
    #当做为反向代理服务器时：最大并发数÷4
    worker_connections  1024;
}


http {
    #支持那些文本扩展名与文件类型映射表请求，在mime.types文件中列举
    include       mime.types;
    #默认文件类型（流）支持很多文件，图片，js/css等
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #防止网络阻塞/模拟重新加载
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65; #长链接超时时间（秒）

    #gzip  on;#开启压缩

    # 部署三个一样的服务集群，实现负载均衡,默认weight权重为1，值越大访问次数越高
    # ip_hash同一个客户端连续WEB请求分发给同一个服务器进行处理，session问题可以解决。
    # 其他功能实现需要补丁包
    # upstream tomcatCluster{
    #   ip_hash;
    #   server 127.0.0.1:8080 weight=1;
    #   server 127.0.0.1:8081 weight=1;
    #   server 127.0.0.1:8082 weight=1;
    # }
    #对应server中location /
    #location / {
    #    proxy_pass   http://tomcatCluster;
    #}

    server {
        #端口口号监听
        listen       80;
        #服务器名称
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main; //主机访问日志
        #默认的匹配/请求，当访问路径中有/.会被该location匹配处理

        location / {
            root   html; #root是配置服务器默认网站根目录位置，在nginx目录下html
            index  index.html index.htm;
        }
       

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        #~表示正则匹配，后面内容可以是正则表达式匹配
        #.表示任意字符
        #*表示一个或者多个字符
        #\.是转移字符
        #|表示或
        #$表示结尾
        #用户请求后缀为.php时默认跳转到127.0.0.1:80服务器
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80(本机ip默认127.0.0.1)
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}
        #用户请求后缀为.html时默认在本地nginx服务访问
        #location ~ \.html$ {
        #    root   /user/share/nginx/html;
        #}
        #用户请求后缀为.html，js，css，png，gif时默认在本地nginx服务访问
        #location ~ \.(html|js|css|png|gif)$ {
        #    root   /user/share/nginx/html;
        #}

        #重上到下优先级依次降低
        # 反向代理，用户访问此设备IP：80端口加/jd定向到jd.com
        #location /jd {
        #    proxy_pass   http://jd.com;
        #}
        # 反向代理，用户访问此设备IP：80端口加/baidu.com定向到jd.com
        #location /baidu.com {
        #    proxy_pass   http://baidu.com;
        #}
        # 反向代理，用户访问此设备IP：80端口加/定向到指定页面
        #
        #location / {
        #    proxy_pass   http://zhidingyemian;
        #}
        

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    #https端口443，需要ca证书，一般免费的少，安全但是相对较慢
    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
